Automated Upgrade Simulation
============================

You can perform `Automated Upgrade Simulation` by using the
``automated_upgrade_simulation`` extension. It implements the following classes 
by inheriting the base classes in JADE:

* ``AutomatedUpgradeInputs``
* ``AutomatedUpgradeParameters``
* ``AutomatedUpgradeConfiguration``
* ``AutomatedUpgradeSimulation``

Here are the steps to run the simulation:

1. Generate DISCO models

.. code-block:: bash

    $ disco transform-model <source-data-inputs> upgrade

2. Generate job configuration file

.. code-block:: bash

    $ disco config upgrade <upgrade-models>


4. Submit jobs via JADE

.. code-block:: bash

    $ jade submit-jobs <config.json> -o <output-directory>


Upgrade Parameters
------------------

To run automated upgrade simulation, the following parameters may need to be 
customized. Here are the default values in the ``upgrade-params.toml`` file.

.. code-block:: bash

    $ disco config upgrade --show-params .
    Thermal Upgrade Config
    ----------
    Parameter                 Value
    line_loading_limit      : 19.0
    dt_loading_limit        : 1.0
    line_safety_margin      : 1.5
    xfmr_safety_margin      : 1.5
    nominal_voltage         : 120
    max_iterations          : 20
    create_upgrade_plots    : false
    tps_to_test             : [0.2, 1.8, 0.1, 0.9]
    create_upgrades_library : true
    upgrade_library_path    :

    Voltage Upgrade Config
    ----------
    Parameter                     Value
    target_v                    : 1
    initial_voltage_upper_limit : 1.0583
    initial_voltage_lower_limit : 0.9167
    final_voltage_upper_limit   : 1.05
    final_voltage_lower_limit   : 0.95
    nominal_voltage             : 120
    nominal_pu_voltage          : 1
    tps_to_test                 : [0.2, 1.3, 0.1, 0.9]
    create_topology_plots       : false
    cap_sweep_voltage_gap       : 1
    reg_control_bands           : [1, 2]
    reg_v_delta                 : 0.5
    max_regulators              : 4
    use_ltc_placement           : true
    thermal_scenario_name       : ThermalUpgrade

    Upgrade params from 'upgrade-params.toml'.


You can edit this file and provide customized values if need, or create your own
parameter file and run the command ``disco config upgrade`` 
with the ``--params-file`` option.


PyDSS Scenarios
---------------

* Thermal Upgrade
* Voltage Upgrade

In PyDSS, voltage upgrade scenario refers to thermal upgrade scenario by using
the scenario name, that is, `ThermalUpgrade` here which could not be changed
in configuration.

Job Order
---------

If you need to run the upgrade simulation in sequential order, for example, the
order is based on penetration levels or time sequences, then you need to provide
the ``job_order`` value for the model inputs,

.. code-block:: bash

    {
        "feeder": "J1",
        "deployment": {
            ...
            "job_order": 1
        },
        "simulation_type": "Snapshot"
        ...
    }

The jobs will run in sequential order based on ``job_order``. Jobs with larger
``job_order`` values will redirect to upgrade files generated by earlier jobs.
